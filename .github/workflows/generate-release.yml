name: Generete release

on:
  repository_dispatch:
    types: [start-build-distributions]
  workflow_dispatch:

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: webcardinal-workspace_node-modules
        with:
          path: ./webcardinal-workspace/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./webcardinal-workspace/package-lock.json') }}-v2

      - name: Install
        run: npm install && npm run clean
        shell: bash

      - name: Latest WebCardinal
        run: npm run get-source-code
        shell: bash

      - name: Release
        run: npm run release
        shell: bash

      - name: Preparing tests
        run: rm -rf ./docs/webcardinal/* && cp -r ./release/production/bundle-all/dist/* ./docs/webcardinal
        shell: bash

      - name: Tests
        run: npm test

      - name: Push results
        if: ${{ always() }}
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "github-actions"
          git add ./docs/pages/automated-tests/results
          git commit -m "WebCardinal test results (build-id $GITHUB_RUN_NUMBER)"
          git push

      - name: Archive
        if: ${{ success() }}
        run: zip -q -r webcardinal-release.zip ./release
        shell: bash

      - uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: webcardinal-release
          path: webcardinal-release.zip

  upload-release:
    needs: prepare-release

    permissions: write-all

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: webcardinal-release

      - name: Unzip archive
        run: unzip -q webcardinal-release.zip
        shell: bash

      - name: Inspect distribution
        run: cd ./release && ls -A

      - name: Publish the new release into master
        run: |
          chmod +x .github/publish_release.sh
          .github/publish_release.sh -p
        env:
          ACCESS_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        shell: bash

      - name: Publish the new release into dev
        run: |
          chmod +x .github/publish_release.sh
          .github/publish_release.sh -d
        env:
          ACCESS_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        shell: bash
